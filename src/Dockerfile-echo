# Learn about building .NET container images:
# https://github.com/dotnet/dotnet-docker/blob/main/samples/README.md
#FROM mcr.microsoft.com/dotnet/sdk:8.0-alpine AS build
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
#ARG TARGETARCH
WORKDIR /App

# copy csproj and restore as distinct layers
COPY Echo/*.csproj Echo/
COPY ServiceRegistry.Interface/*.csproj ServiceRegistry.Interface/

RUN dotnet restore --ucr Echo/Echo.csproj

# copy and publish app and libraries
COPY ./Echo/* Echo/
COPY ./ServiceRegistry.Interface/* ServiceRegistry.Interface/
WORKDIR /App/Echo
RUN dotnet publish --ucr -o ../out


# Enable globalization and time zones:
# https://github.com/dotnet/dotnet-docker/blob/main/samples/enable-globalization.md
# final stage/image
#FROM mcr.microsoft.com/dotnet/aspnet:8.0-alpine
FROM mcr.microsoft.com/dotnet/aspnet:8.0

ENV ASPNETCORE_ENVIRONMENT=Development
ENV ASPNETCORE_URLS=http://*:8001
ENV SERVICE_REGISTRY_ENDPOINT=http://host.docker.internal:7089/Service
ENV SERVICE_ENVIRONMENT=dev
ENV SERVICE_ENDPOINT=http://localhost:8001
EXPOSE 8001

WORKDIR /App
COPY --from=build /App/out .
USER $APP_UID
ENTRYPOINT ["dotnet", "Echo.dll"]